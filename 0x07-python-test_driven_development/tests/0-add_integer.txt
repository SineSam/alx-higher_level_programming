# 0-add_integer.txt

===========================
How to use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)`` retunrs the addition of its two arguments. For numbers, that value is equivalent to using the ``+`` operator.

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 3)
	5

::

	>>> add_integer(-1, 1)
	0

The function also works with float-point values.

::

	>>> add_integer(3.0, 4.0)
	7

Note that floats are coated to int before addition performed.

::

	>>> add_integer(4.5, 3.6)
	7

Float and non-float values can be combined.

::

	>>> add_integer(2.4, 5)
	7

Second argument is optional,else 98 by default.

::

	>>> add_integer(2)
	100

Non-numbers
===========

``add_integer()`` expects both arguments are either integers or floats. If either argument is a non-integer and non-float, a TypeError is raised

::
	>>> add_integer("Value", 2)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only printed for the first argument.

::

	>>> add_integer("Value","string")
	Traceback (most recent call last):
	TypeError: a must be an integer

The function will fail if infinity is provided.

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(3, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

Again with NaN numbers.

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

::

	>>> add_integer(3, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
